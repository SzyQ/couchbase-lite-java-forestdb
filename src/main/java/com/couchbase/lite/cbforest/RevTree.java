/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.couchbase.lite.cbforest;

public class RevTree {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected RevTree(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RevTree obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        cbforestJNI.delete_RevTree(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public RevTree() {
    this(cbforestJNI.new_RevTree__SWIG_0(), true);
  }

  public RevTree(Slice arg0, java.math.BigInteger arg1, java.math.BigInteger arg2) {
    this(cbforestJNI.new_RevTree__SWIG_1(Slice.getCPtr(arg0), arg0, arg1, arg2), true);
  }

  public void decode(Slice arg0, java.math.BigInteger arg1, java.math.BigInteger arg2) throws java.lang.Exception {
    cbforestJNI.RevTree_decode(swigCPtr, this, Slice.getCPtr(arg0), arg0, arg1, arg2);
  }

  public Slice encode() {
    long cPtr = cbforestJNI.RevTree_encode(swigCPtr, this);
    return (cPtr == 0) ? null : new Slice(cPtr, false);
  }

  public long size() {
    return cbforestJNI.RevTree_size(swigCPtr, this);
  }

  public Revision get(long index) throws java.lang.Exception {
    long cPtr = cbforestJNI.RevTree_get__SWIG_0(swigCPtr, this, index);
    return (cPtr == 0) ? null : new Revision(cPtr, false);
  }

  public Revision get(RevID revid) throws java.lang.Exception {
    long cPtr = cbforestJNI.RevTree_get__SWIG_1(swigCPtr, this, RevID.getCPtr(revid), revid);
    return (cPtr == 0) ? null : new Revision(cPtr, false);
  }

  public Revision getBySequence(java.math.BigInteger seq) {
    long cPtr = cbforestJNI.RevTree_getBySequence(swigCPtr, this, seq);
    return (cPtr == 0) ? null : new Revision(cPtr, false);
  }

  public VectorRevision allRevisions() {
    return new VectorRevision(cbforestJNI.RevTree_allRevisions(swigCPtr, this), true);
  }

  public Revision currentRevision() {
    long cPtr = cbforestJNI.RevTree_currentRevision(swigCPtr, this);
    return (cPtr == 0) ? null : new Revision(cPtr, false);
  }

  public VectorRevision currentRevisions() {
    return new VectorRevision(cbforestJNI.RevTree_currentRevisions(swigCPtr, this), true);
  }

  public boolean hasConflict() {
    return cbforestJNI.RevTree_hasConflict(swigCPtr, this);
  }

  public Revision insert(RevID arg0, Slice arg1, boolean arg2, boolean arg3, RevID arg4, boolean arg5) {
    long cPtr = cbforestJNI.RevTree_insert__SWIG_0(swigCPtr, this, RevID.getCPtr(arg0), arg0, Slice.getCPtr(arg1), arg1, arg2, arg3, RevID.getCPtr(arg4), arg4, arg5);
    return (cPtr == 0) ? null : new Revision(cPtr, false);
  }

  public Revision insert(RevID arg0, Slice arg1, boolean arg2, boolean arg3, Revision arg4, boolean arg5) {
    long cPtr = cbforestJNI.RevTree_insert__SWIG_1(swigCPtr, this, RevID.getCPtr(arg0), arg0, Slice.getCPtr(arg1), arg1, arg2, arg3, Revision.getCPtr(arg4), arg4, arg5);
    return (cPtr == 0) ? null : new Revision(cPtr, false);
  }

  public int insertHistory(VectorRevID history, Slice body, boolean deleted, boolean hasAttachments) {
    return cbforestJNI.RevTree_insertHistory(swigCPtr, this, VectorRevID.getCPtr(history), history, Slice.getCPtr(body), body, deleted, hasAttachments);
  }

  public int getLatestHttpStatus() {
    return cbforestJNI.RevTree_getLatestHttpStatus(swigCPtr, this);
  }

  public long prune(long arg0) {
    return cbforestJNI.RevTree_prune(swigCPtr, this, arg0);
  }

  public int purge(RevID arg0) {
    return cbforestJNI.RevTree_purge(swigCPtr, this, RevID.getCPtr(arg0), arg0);
  }

  public void sort() {
    cbforestJNI.RevTree_sort(swigCPtr, this);
  }

}
